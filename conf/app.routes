###
# summary: Creates a conversation (can only be done by a caseworker)
# requestBody:
#   description: A JSON object to create a new conversation
#   required: true
#   content:
#    application/json:
#      schema:
#        $ref: '#/components/schemas/uk.gov.hmrc.securemessage.controllers.models.generic.ConversationRequest'
# responses:
#   201:
#     description: conversation created successfully
#   400:
#     description: bad request such as an invalid payload
#   404:
#     description: required resource not found - e.g. client not recognised or email not found
#   409:
#     description: duplicate - a conversation already exists for this client and conversationId
#   415:
#     description: unsupported media type - should be application/json
#   424:
#     description: a dependency failed - e.g. customer email validation failed
###
PUT         /conversation/:client/:conversationId                                     uk.gov.hmrc.securemessage.controllers.SecureMessageController.createConversation(client: String, conversationId: String)

###
# summary: Adds a message from a caseworker to a conversation
# requestBody:
#   description: A JSON object to create a new caseworker message
#   required: true
#   content:
#    application/json:
#      schema:
#        $ref: '#/components/schemas/uk.gov.hmrc.securemessage.controllers.models.generic.CaseworkerMessageRequest'
# responses:
#   201:
#     description: message created successfully
#   400:
#     description: bad request such as an invalid payload
#   404:
#     description: required resource not found - e.g. client not recognised or conversation not found
#   415:
#     description: unsupported media type - should be application/json
#   424:
#     description: a dependency failed - e.g. client not recognised
###
POST        /conversation/:client/:conversationId/caseworker-message                  uk.gov.hmrc.securemessage.controllers.SecureMessageController.createCaseworkerMessage(client: String, conversationId: String)

###
# summary: Adds a message from a customer to a conversation
# security:
#   - bearerToken: []
# requestBody:
#   description: A JSON object to create a new customer message
#   required: true
#   content:
#    application/json:
#      schema:
#        $ref: '#/components/schemas/uk.gov.hmrc.securemessage.controllers.models.generic.CustomerMessageRequest'
# responses:
#   201:
#     description: message created successfully
#   400:
#     description: bad request such as invalid payload or conversation ID not recognised
#   401:
#     description: user is not authorised to add a message
###
POST        /conversation/:client/:conversationId/customer-message                    uk.gov.hmrc.securemessage.controllers.SecureMessageController.createCustomerMessage(client: String, conversationId: String)

###
# summary: DEPRECATED - Gets a list of conversations via enrolmentKey and enrolmentName
# security:
#   - bearerToken: []
# responses:
#   200:
#     description: list of conversations was recieved
#   401:
#     description: unauthorised customer when they don't have an enrolment
###
GET         /conversations/:enrolmentKey/:enrolmentName                               uk.gov.hmrc.securemessage.controllers.SecureMessageController.getMetadataForConversations(enrolmentKey: String, enrolmentName: String)

###
# summary: Gets a list of conversations via enrolmentKeys, enrolments and tags filters
# security:
#   - bearerToken: []
# responses:
#   200:
#     description: list of conversations was recieved
#   401:
#     description: unauthorised customer when they don't have an enrolment
###
GET         /conversations                                                            uk.gov.hmrc.securemessage.controllers.SecureMessageController.getMetadataForConversationsFiltered(enrolmentKey: Option[List[String]], enrolment: Option[List[CustomerEnrolment]], tag: Option[List[Tag]])

###
# summary: Gets a conversation via client ID and conversation ID
# security:
#   - bearerToken: []
# responses:
#   200:
#     description: conversations was recieved
#   401:
#     description: unauthorised customer when they don't have an EORI enrolment
#   404:
#     description: conversation not found
###
GET         /conversation/:client/:conversationId/:enrolmentKey/:enrolmentName        uk.gov.hmrc.securemessage.controllers.SecureMessageController.getConversationContent(client: String, conversationId: String, enrolmentKey: String, enrolmentName: String)

###
# summary: Adds a date and time that a participant read the conversation
# security:
#   - bearerToken: []
# requestBody:
#   description: A JSON object to create a new customer message
#   required: true
#   content:
#    application/json:
#      schema:
#        $ref: '#/components/schemas/uk.gov.hmrc.securemessage.controllers.models.generic.ReadTime'
# responses:
#   201:
#     description: read date and time successfully added
#   400:
#     description: issue with updating read time
###
POST        /conversation/:client/:conversationId/read-time                           uk.gov.hmrc.securemessage.controllers.SecureMessageController.addCustomerReadTime(client: String, conversationId: String)
