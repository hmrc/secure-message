# IF THE MICRO-SERVICE DOES NOT NEED ANY TEST-ONLY END-POINTS (ALWAYS PREFERRED) DELETE THIS FILE.

# !!!WARNING!!! This file MUST NOT be referenced in the "application.conf" file to avoid risk of rolling test app.routes in the production environment.
# If you need test app.routes when running tests in CI make sure that the profile for this micro-service (used by service-manager) defines this router as parameter.
# To do so add the following line to the micro-service profile: "-Dapplication.router=testOnlyDoNotUseInAppConf.Routes"
# To start the micro-service locally using the test app.routes run the following command: "sbt run -Dapplication.router=testOnlyDoNotUseInAppConf.Routes"

# Any test-only end-point should be defined here.
# !!!WARNING!!! Every route defined in this file MUST be prefixed with "/test-only/". This is because NGINX is blocking every uri containing the string "test-only" in production.
# Failing to follow this rule may result in test app.routes deployed in production.

# Add all the application app.routes to the prod.app.routes file

### NoDocs ###
GET   /docs/swagger-ui/*file                controllers.Assets.at(path:String="/public/lib/swagger-ui", file:String)

### NoDocs ###
GET   /assets/*file                         controllers.Assets.versioned(path="/public", file: Asset)

->         /                                prod.Routes

DELETE    /test-only/delete/conversation/:conversationId/:client    uk.gov.hmrc.securemessage.testonly.controllers.TestOnlyController.deleteConversation(conversationId, client)
