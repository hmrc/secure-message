/*
 * Copyright 2023 HM Revenue & Customs
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package uk.gov.hmrc.securemessage.controllers.utils

import com.fasterxml.jackson.databind.ObjectMapper
import com.networknt.schema.{ JsonSchema, JsonSchemaFactory, SpecVersion, ValidationMessage }
import play.api.libs.json.JsValue

import scala.jdk.CollectionConverters._

trait MessageSchemaValidator {

  lazy val messageSchema: String =
    """
      |{
      |  "$schema": "http://json-schema.org/draft-04/schema#",
      |  "type": "object",
      |  "properties": {
      |    "externalRef": {
      |      "type": "object",
      |      "properties": {
      |        "id": {
      |          "type": "string",
      |          "description": "A unique ID for this message generated by the calling service"
      |        },
      |        "source": {
      |          "type": "string",
      |          "description": "The source of this message i.e. mdtp"
      |        }
      |      },
      |      "required": [
      |        "id",
      |        "source"
      |      ]
      |    },
      |    "recipient": {
      |      "type": "object",
      |      "properties": {
      |        "regime": {
      |          "type": "string",
      |          "description": "Regime"
      |        },
      |        "taxIdentifier": {
      |          "type": "object",
      |          "properties": {
      |            "name": {
      |              "type": "string",
      |              "description": "The tax identifier name to which this message relates."
      |            },
      |            "value": {
      |              "type": "string",
      |              "description": "The recipient customer's tax identifier value."
      |            }
      |          },
      |          "required": [
      |            "name",
      |            "value"
      |          ]
      |        },
      |        "name": {
      |          "type": "object",
      |          "properties": {
      |            "line1": {
      |              "type": "string",
      |              "description": "The name of the recipient, for example “John Paul Smith” or “Mr. J Smith”."
      |            },
      |            "line2": {
      |              "type": "string",
      |              "description": "A second name line for the recipient."
      |            },
      |            "line3": {
      |              "type": "string",
      |              "description": "A third name line for the recipient."
      |            }
      |          }
      |        },
      |        "email": {
      |          "type": "string",
      |          "description": "If provided, the notification email for this message will be sent to this email address."
      |        }
      |      },
      |      "required": [
      |        "regime",
      |        "taxIdentifier"
      |      ]
      |    },
      |    "tags": {
      |      "type": "object",
      |      "properties": {
      |        "notificationType": {
      |          "type": "string",
      |          "description": "Notification type"
      |        }
      |      }
      |    },
      |    "messageType": {
      |      "type": "string",
      |      "description": "This is used to determine the email alert to use for this message."
      |    },
      |    "language": {
      |      "type": "string",
      |      "description": "This is optional, will be used to determine the language sets for email subjaect"
      |    },
      |    "validFrom": {
      |      "type": "string",
      |      "format": "date",
      |      "description": "The date on which this message becomes valid."
      |    },
      |    "content": {
      |      "type": "array",
      |      "items": [
      |        {
      |          "type": "object",
      |          "properties": {
      |            "lang": {
      |              "type": "string",
      |              "minLength": 1,
      |              "pattern": "^\\S.*$",
      |              "description": "Content language i.e. 'en' or 'cy'"
      |            },
      |            "subject": {
      |              "type": "string",
      |              "minLength": 1,
      |              "pattern": "^\\S.*$",
      |              "description": "Subject line"
      |            },
      |            "body": {
      |              "type": "string",
      |              "minLength": 1,
      |              "pattern": "^\\S.*$",
      |              "description": "<base64 encoded source data>"
      |            }
      |          },
      |          "required": [
      |            "lang",
      |            "subject",
      |            "body"
      |          ]
      |        }
      |      ]
      |    },
      |    "alertDetails": {
      |      "type": "object",
      |      "properties": {
      |        "data": {
      |          "type": "object",
      |          "properties": {
      |            "key1": {
      |              "type": "string",
      |              "description": "Key 1"
      |            },
      |            "key2": {
      |              "type": "string",
      |              "description": "Key 2"
      |            }
      |          },
      |          "required": [
      |            "key1",
      |            "key2"
      |          ]
      |        }
      |      },
      |      "required": [
      |        "data"
      |      ]
      |    },
      |    "alertQueue": {
      |      "type": "string",
      |      "description": "The email messaging queue to place the email alert for this message onto."
      |    },
      |    "details": {
      |      "type": "object",
      |      "properties": {
      |        "formId": {
      |          "type": "string",
      |          "description": "The form ID of the message that we are sending."
      |        },
      |        "issueDate": {
      |          "type": "string",
      |          "format": "date",
      |          "description": "The date this message was created by the source system."
      |        },
      |        "batchId": {
      |          "type": "string",
      |          "description": "If this message is part of a 'batch' or 'print' run that has an ID, then specify this here."
      |        },
      |        "sourceData": {
      |          "type": "string",
      |          "description": "This is the source data that GMC received in the HODS file for this message."
      |        },
      |        "properties": {
      |          "type": "array",
      |          "items": [
      |            {
      |              "type": "object",
      |              "properties": {
      |                "property": {
      |                  "type": "object",
      |                  "properties": {
      |                    "name": {
      |                      "type": "string",
      |                      "minLength": 1,
      |                      "pattern": "^\\S.*$"
      |                    },
      |                    "value": {
      |                      "type": "string",
      |                      "minLength": 1,
      |                      "pattern": "^\\S.*$"
      |                    }
      |                  },
      |                  "required": [
      |                    "name",
      |                    "value"
      |                  ]
      |                }
      |              },
      |              "required": [
      |                "property"
      |              ]
      |            }
      |          ]
      |        }
      |      },
      |      "required": [
      |        "formId"
      |      ]
      |    }
      |  },
      |  "required": [
      |    "externalRef",
      |    "recipient",
      |    "messageType",
      |    "content"
      |  ]
      |}
      |""".stripMargin

  lazy val jsonSchema: JsonSchema = JsonSchemaFactory.getInstance(SpecVersion.VersionFlag.V4).getSchema(messageSchema)

  def isValidJson(json: JsValue): Either[Boolean, String] = {
    val parsedJson = new ObjectMapper().readTree(json.toString())
    val errors = jsonSchema.validate(parsedJson).asScala.toSeq
    if (errors.isEmpty) Left(true) else Right(toStringFormat(errors))
  }

  private def toStringFormat(errors: Seq[ValidationMessage]): String =
    s"Missing mandatory fields: {${errors.map(e => e.getMessage.replaceAll(": is missing but it is required", "")).mkString(", ")}}"

}
